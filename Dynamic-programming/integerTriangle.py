# 아래와 같은 정수 삼각형이 있을 때, 최상위 노드에서부터 시작하여 최하단 노드까지 갔을 때 거쳐간 숫자의 최대값을 구하기
'''
예시
7
3 8
8 1 0
2 7 4 4
4 5 2 6 5
'''
# 아래와 같은 과정이 있고 (num1, num2)에서 더 큰 값을 저장
'''
[7]
[10, 15]
[18, (11, 16), 15]
[20, (25, 23), (20, 19), 19]
[24, (25, 30), (27, 22), (26, 25), 24]
'''
# 최종
'''
[7]
[10, 15]
[18, 16, 15]
[20, 25, 20, 19]
[24, 30, 27, 26, 24]
'''
# 따라서 맨 마지막 리스트의 최대값이 답
triangle = [[7], [3, 8], [8, 1, 0], [2, 7, 4, 4], [4, 5, 2, 6, 5]]


def solution(triangle):
    # 점화식
    for i in range(1, len(triangle)):
        for j in range(i+1):
            if j == 0:
                triangle[i][0] += triangle[i-1][0]
            elif j == i:
                triangle[i][-1] += triangle[i-1][-1]
            else:
                triangle[i][j] += max(triangle[i-1][j-1], triangle[i-1][j])

    return max(triangle[-1])

# 출처 - 프로그래머스 - 정수 삼각형
